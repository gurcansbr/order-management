
version: '3.8'

services:
  db:
    image: mysql:latest
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_secret
      - MYSQL_DATABASE=order_management
      - MYSQL_USER=user
      - MYSQL_PASSWORD=secret
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot_secret", "--execute", "SHOW DATABASES;"]
      interval: 3s
      retries: 5
      timeout: 5s
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql

  order-dashboard:
    build:
      context: ./order-dashboard
      dockerfile: docker/Dockerfile
    container_name: order-dashboard
    ports:
      - "8018:8008"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./order-dashboard:/var/www/html 
 
  invoice-service:
    build:
      context: ./invoice-service
      dockerfile: docker/Dockerfile
    container_name: invoice-service
    ports:
      - "8009:3000"
    env_file:
      - ./invoice-service/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./invoice-service:/app

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" # Zookeeper bağlantı ayarı
      KAFKA_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

volumes:
  mysql_data:

